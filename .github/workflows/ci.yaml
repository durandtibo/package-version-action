name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch: # to trigger manually

permissions:
  contents: read

jobs:
  test-javascript:
    name: JavaScript Tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os:
          [
            ubuntu-latest,
            ubuntu-24.04,
            ubuntu-22.04,
            ubuntu-20.04,
            macos-latest,
            macos-14,
            macos-13,
            macos-12
          ]
        node-version: ['latest', '22', '21', '20']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.python-version }}
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Check Format
        run: npm run format:check

      # - name: Lint
      #   id: npm-lint
      #   run: npm run lint

      - name: Test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os:
          [
            ubuntu-latest,
            ubuntu-24.04,
            ubuntu-22.04,
            ubuntu-20.04,
            macos-latest,
            macos-14,
            macos-13,
            macos-12
          ]
        node-version: ['latest', '22', '21', '20']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.python-version }}
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          package-name: 'numpy'
          package-version: '2.0.2'
          python-version: '3.11'

      - name: Print Output
        id: output
        run: |
          echo "closest-valid-version ${{ steps.test-action.outputs.closest-valid-version }}"
          echo "is-valid-version ${{ steps.test-action.outputs.is-valid-version }}"
